# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js  ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm install
    - name: Build
      run: npm run build --if-present
    - name: Test
      run: npm test
    - name: Push docker image
      run: |
        docker build -t my-health-api .
        echo ${{ secrets.DOCKER_SECRET }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker tag my-health-api pasanransika/my-health-api
        docker push pasanransika/my-health-api
    - name: Deploy to Linode
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.LINODE_IP }}
        username: ${{ secrets.LINODE_USERNAME }}
        password: ${{ secrets.LINODE_PASSWORD }}
        script: |
          docker-compose rm --all
          docker-compose pull
          docker-compose build --no-cache
          docker-compose up -d --force-recreate
          
    - name: Send Email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username:  ${{ secrets.GMAIL_USERNAME }}
        password: ${{ secrets.GMAIL_PASSWORD }}
        subject: my-helath API.
        body: Application is released.
        attachments: commits.txt
        to: pasanransika1@gmail.com
        from: ${{ secrets.GMAIL_ADDRESS }}
